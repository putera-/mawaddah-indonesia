openapi: "3.0.2"
info:
    title: Auth API
    version: "1.0"
    contact:
        name: "Rizjami Putera"
        email: "rizjamiputera@gmail.com"
        url: "https://udaputera.com"
servers:
  - description: Auth API
    url: "{url}:5000/v1"
    variables:
        url:
            default: "http://localhost:5000"
paths:
    "/auth/register":
        post:
            tags:
            - Auth
            description: Create user role as MEMBER
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                firstname:
                                    type: string
                                lastname:
                                    type: string
                                email:
                                    type: string
                                    format: email
                                password:
                                    type: string
                                    format: password
                                confirm_password:
                                    type: string
                                    format: password
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            examples:
                                profile-data:
                                    $ref: "#/components/examples/profile-data"
                400:
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: Email is invalid
                                    error:
                                        type: string
                                        example: Bad Request
                                    statusCode:
                                        type: number
                                        example: 400
    "/auth/login":
        post:
            tags:
            - Auth
            description: Login, expired berlaku 7 hari
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                password:
                                    type: string
                                    format: password
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            examples:
                                profile-data:
                                    $ref: "#/components/examples/auth"


                400:
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: Email is invalid
                                    error:
                                        type: string
                                        example: Bad Request
                                    statusCode:
                                        type: number
                                        example: 400
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: Email atau Password salah!
                                    error:
                                        type: string
                                        example: Unauthorized
                                    statusCode:
                                        type: number
                                        example: 401
    "/auth/extend-access-token":
        get:
            tags:
            - Auth
            description: Get new access token. Panggil api ini jika expired sisa 1 hari / 24 jam
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    access_token:
                                        type: string
                                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhZjI3OGQ4NS1kNDg2LTQ3NGYtOWIyZi03ZDNkNGQ5NDhjYzEiLCJ1c2VybmFtZSI6InVkYV9zdXBlckBnbWFpbC5jb20iLCJyb2xlIjoiU1VQRVJVU0VSIiwiaWF0IjoxNzEwMjk5MTc5LCJleHAiOjE3MTAzODU1Nzl9.BqMYxl56GW7rBi1fYn-NLf7EIVMB7ACtKnB2K-M2fGg
                                    exp:
                                        type: number
                                        example: 1710385579608


                400:
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: Email is invalid
                                    error:
                                        type: string
                                        example: Bad Request
                                    statusCode:
                                        type: number
                                        example: 400
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: Invalid Credentials!
                                    error:
                                        type: string
                                        example: Unauthorized
                                    statusCode:
                                        type: number
                                        example: 401
    "/auth/logout":
        delete:
            tags:
            - Auth
            description: Logout
            responses:
                204:
                    description: OK. No Content
                400:
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: Email is invalid
                                    error:
                                        type: string
                                        example: Bad Request
                                    statusCode:
                                        type: number
                                        example: 400
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: Invalid Credentials!
                                    error:
                                        type: string
                                        example: Unauthorized
                                    statusCode:
                                        type: number
                                        example: 401
    "/auth/profile":
        get:
            tags:
            - Auth
            description: Get User login profile
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            examples:
                                profile-data:
                                    $ref: "#/components/examples/profile-data"
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        example: Unauthorized
                                    statusCode:
                                        type: number
                                        example: 401
        patch:
            tags:
            - Auth
            description: User can only update himself, for all roles
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                firstname:
                                    type: string
                                lastname:
                                    type: string
                                avatar:
                                    type: string
                                    format: binary
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            examples:
                                profile-data:
                                    $ref: "#/components/examples/profile-data"
                                profile-no-avatar:
                                    $ref: "#/components/examples/profile-no-avatar"
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        example: Unauthorized
                                    statusCode:
                                        type: number
                                        example: 401
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        example: Forbidden
                                    statusCode:
                                        type: number
                                        example: 403
                404:
                    description: Not Found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        example: Not Found
                                    statusCode:
                                        type: number
                                        example: 404
    "/auth/change_password":
        patch:
            tags:
            - Auth
            description: Change password for all user role
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                password:
                                    type: string
                                    format: password
                                confirm_password:
                                    type: string
                                    format: password
            responses:
                204:
                    description: OK. No Content
                400:
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: Password confirm is not match
                                    error:
                                        type: string
                                        example: Bad Request
                                    statusCode:
                                        type: number
                                        example: 400
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        example: Unauthorized
                                    statusCode:
                                        type: number
                                        example: 401
components:
    examples:
        auth:
            summary: auth
            value:
                access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhZjI3OGQ4NS1kNDg2LTQ3NGYtOWIyZi03ZDNkNGQ5NDhjYzEiLCJ1c2VybmFtZSI6InVkYV9zdXBlckBnbWFpbC5jb20iLCJyb2xlIjoiU1VQRVJVU0VSIiwiaWF0IjoxNzEwMjk5MTc5LCJleHAiOjE3MTAzODU1Nzl9.BqMYxl56GW7rBi1fYn-NLf7EIVMB7ACtKnB2K-M2fGg
                exp: 1710385579608
                user:
                    id: "591c6b44-9331-4fa0-95a5-1dddc617a033"
                    email: "john_doe@gmail.com"
                    firstname: "John"
                    lastname: "Doe"
                    active: true
                    verified: true
                    avatar: "/public/profile/avatar.jpg"
                    avatar_md: "/public/profile/avatar_md.jpg"
                    role: "MEMBER"
                    taaruf_status: "BLOCKED"
        profile-data:
            summary: profile-data
            value:
                id: "591c6b44-9331-4fa0-95a5-1dddc617a033"
                email: "john_doe@gmail.com"
                firstname: "John"
                lastname: "Doe"
                active: true
                verified: true
                avatar: "/dummy/abang.png"
                avatar_md: "/dummy/abang.png"
                role: "MEMBER"
                taaruf_status: "BLOCKED"
        profile-no-avatar:
            summary: profile-no-avatar
            value:
                id: "591c6b44-9331-4fa0-95a5-1dddc617a033"
                email: "john_doe@gmail.com"
                firstname: "John"
                lastname: "Doe"
                active: true
                verified: true
                avatar: null
                avatar_md: null
                role: "MEMBER"
                taaruf_status: "BLOCKED"

