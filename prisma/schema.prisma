// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model blog {
  id        String   @id @default(uuid())
  title     String   @db.VarChar(100)
  content   String   @db.Text
  deleted   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Client {
  id                String    @id @default(uuid())
  name              String    @db.VarChar(100)
  about             String?   @db.Text
  phone             String    @db.VarChar(20)
  address           String    @db.Text
  taaruf_muqoddimah String?   @db.Text
  login_muqoddimah  String?   @db.Text
  signup_muqoddimah String?   @db.Text
  youtube           String?   @db.VarChar(100)
  facebook          String?   @db.VarChar(100)
  twitter           String?   @db.VarChar(100)
  tiktok            String?   @db.VarChar(100)
  instagram         String?   @db.VarChar(100)
  linkedin          String?   @db.VarChar(100)
  galleries         Gallery[]
  sliders           Slider[]
  faqs              FAQ[]

  @@map("client")
}

model Gallery {
  id        String   @id @default(uuid())
  Client    Client   @relation(fields: [clientId], references: [id])
  clientId  String
  title     String?  @db.VarChar(100)
  photo     String?  @db.Text
  deleted   Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("gallery")
}

model Slider {
  id        String   @id @default(uuid())
  Client    Client   @relation(fields: [clientId], references: [id])
  clientId  String
  title     String?  @db.Text
  photo     String?  @db.Text
  deleted   Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("slider")
}

model FAQ {
  id        String   @id @default(uuid())
  Client    Client   @relation(fields: [clientId], references: [id])
  clientId  String
  question  String   @db.VarChar(255)
  answer    String   @db.VarChar(255)
  deleted   Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("faq")
}
